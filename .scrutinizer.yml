---
# inherit the next configuration down the chain (see above for the order)
inherit: true
filter:
  paths: ["src/"]
# inherit the next configuration down the chain (see above for the order)
inherit: true
tools:
  php_mess_detector: true
  php_analyzer:
    config:
      parameter_reference_check: { enabled: false }
      checkstyle: { enabled: false, no_trailing_whitespace: true, naming: { enabled: true, local_variable: '^[a-z][a-zA-Z0-9]*$', abstract_class_name: ^Abstract|Factory$, utility_class_name: 'Utils?$', constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$', property_name: '^[a-z][a-zA-Z0-9]*$', method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$', parameter_name: '^[a-z][a-zA-Z0-9]*$', interface_name: '^[A-Z][a-zA-Z0-9]*Interface$', type_name: '^[A-Z][a-zA-Z0-9]*$', exception_name: '^[A-Z][a-zA-Z0-9]*Exception$', isser_method_name: '^(?:is|has|should|may|supports)' } }
      unreachable_code: { enabled: false }
      check_access_control: { enabled: false }
      typo_checks: { enabled: false }
      check_variables: { enabled: false }
      check_calls: { enabled: true, too_many_arguments: true, missing_argument: true, argument_type_checks: lenient }
      suspicious_code: { enabled: false, overriding_parameter: false, overriding_closure_use: false, parameter_closure_use_conflict: false, parameter_multiple_times: false, non_existent_class_in_instanceof_check: false, non_existent_class_in_catch_clause: false, assignment_of_null_return: false, non_commented_switch_fallthrough: false, non_commented_empty_catch_block: false, overriding_private_members: false, use_statement_alias_conflict: false, precedence_in_condition_assignment: false }
      dead_assignments: { enabled: false }
      verify_php_doc_comments: { enabled: false, parameters: false, return: false, suggest_more_specific_types: false, ask_for_return_if_not_inferrable: false, ask_for_param_type_annotation: false }
      loops_must_use_braces: { enabled: false }
      check_usage_context: { enabled: true, foreach: { value_as_reference: true, traversable: true } }
      simplify_boolean_return: { enabled: false }
      phpunit_checks: { enabled: false }
      reflection_checks: { enabled: false }
      precedence_checks: { enabled: true, assignment_in_condition: true, comparison_of_bit_result: true }
      basic_semantic_checks: { enabled: false }
      unused_code: { enabled: false }
      deprecation_checks: { enabled: false }
      useless_function_calls: { enabled: false }
      metrics_lack_of_cohesion_methods: { enabled: false }
      metrics_coupling: { enabled: true, stable_code: { namespace_prefixes: {  }, classes: {  } } }
      doctrine_parameter_binding: { enabled: false }
      doctrine_entity_manager_injection: { enabled: false }
      symfony_request_injection: { enabled: false }
      doc_comment_fixes: { enabled: false }
      reflection_fixes: { enabled: false }
      use_statement_fixes: { enabled: true, remove_unused: true, preserve_multiple: false, preserve_blanklines: false, order_alphabetically: false }
  php_code_sniffer:
    config:
      tab_width: '4'
      standard: PSR2
      sniffs: { psr1: { classes: { class_declaration_sniff: true } }, generic: { code_analysis: { unused_function_parameter_sniff: true }, white_space: { disallow_tab_indent_sniff: true, scope_indent_sniff: true }, php: { disallow_short_open_tag_sniff: true }, formatting: { multiple_statement_alignment_sniff: true, space_after_cast_sniff: true, disallow_multiple_statements_sniff: true } }, psr2: { classes: { property_declaration_sniff: true, class_declaration_sniff: true }, methods: { method_declaration_sniff: true }, namespaces: { namespace_declaration_sniff: true, use_declaration_sniff: true }, files: { end_file_newline_sniff: true }, control_structures: { control_structure_spacing_sniff: true, switch_declaration_sniff: true, else_if_declaration_sniff: true } } }
  sensiolabs_security_checker: true
  php_cpd: true
  php_loc: true
  php_pdepend: true
  php_hhvm: true

checks:
    php:
        code_rating: true
        duplication: true
        variable_existence: true
        useless_calls: true
        use_statement_alias_conflict: true
        unused_variables: true
        unused_properties: true
        unused_parameters: true
        unused_methods: true
        unreachable_code: true
        sql_injection_vulnerabilities: true
        security_vulnerabilities: true
        precedence_mistakes: true
        precedence_in_conditions: true
        parameter_non_unique: true
        no_property_on_interface: true
        no_non_implemented_abstract_methods: true
        deprecated_code_usage: true
        closure_use_not_conflicting: true
        closure_use_modifiable: true
        avoid_useless_overridden_methods: true
        avoid_conflicting_incrementers: true
        assignment_of_null_return: true
        verify_access_scope_valid: true
        verify_argument_usable_as_reference: true
        verify_property_names: true
        use_self_instead_of_fqcn: true
        uppercase_constants: true
        too_many_arguments: true
        symfony_request_injection: true
        switch_fallthrough_commented: true
        spacing_of_function_arguments: true
        spacing_around_non_conditional_operators: true
        spacing_around_conditional_operators: true
        space_after_cast: true
        single_namespace_per_use: true
        simplify_boolean_return: true
        side_effects_or_types: true
        scope_indentation:
            spaces_per_level: '4'
        return_doc_comments: true
        return_doc_comment_if_not_inferrable: true
        require_scope_for_properties: true
        require_scope_for_methods: true
        require_php_tag_first: true
        require_closing_tag: true
        require_braces_around_control_structures: true
        remove_trailing_whitespace: true
        remove_php_closing_tag: true
        remove_extra_empty_lines: true
        psr2_switch_declaration: true
        psr2_control_structure_declaration: true
        psr2_class_declaration: true
        property_assignments: true
        properties_in_camelcaps: true
        prefer_while_loop_over_for_loop: true
        prefer_unix_line_ending: true
        prefer_sapi_constant: true
        php5_style_constructor: true
        parameters_in_camelcaps: true
        parameter_doc_comments: true
        param_doc_comment_if_not_inferrable: true
        overriding_private_members: true
        optional_parameters_at_the_end: true
        one_class_per_file: true
        non_commented_empty_catch_block: true
        no_unnecessary_if: true
        no_unnecessary_function_call_in_for_loop: true
        no_underscore_prefix_in_properties: true
        no_underscore_prefix_in_methods: true
        no_trailing_whitespace: true
        no_space_inside_cast_operator: true
        no_space_around_object_operator: true
        no_short_method_names:
            minimum: '5'
        no_mixed_inline_html: true
        no_long_variable_names:
            maximum: '20'
        no_goto: true
        no_global_keyword: true
        no_exit: true
        no_eval: true
        no_error_suppression: true
        no_empty_statements: true
        no_else_if_statements: true
        no_duplicate_arguments: true
        no_debug_code: true
        no_commented_out_code: true
        newline_at_end_of_file: true
        more_specific_types_in_doc_comments: true
        missing_arguments: true
        method_calls_on_non_object: true
        lowercase_php_keywords: true
        lowercase_basic_constants: true
        line_length:
            max_length: '120'
        instanceof_class_exists: true
        function_in_camel_caps: true
        function_body_start_on_new_line: true
        foreach_usable_as_reference: true
        foreach_traversable: true
        fix_use_statements:
            remove_unused: true
            preserve_multiple: false
            preserve_blanklines: false
            order_alphabetically: true
        fix_php_opening_tag: true
        fix_linefeed: true
        fix_line_ending: true
        fix_identation_4spaces: true
        fix_doc_comments: true
        ensure_lower_case_builtin_functions: true
        encourage_single_quotes: true
        encourage_shallow_comparison: true
        encourage_postdec_operator: true
        classes_in_camel_caps: true
        catch_class_exists: true
        blank_line_after_namespace_declaration: true
        avoid_usage_of_logical_operators: true
        avoid_unnecessary_concatenation: true
        avoid_todo_comments: true
        avoid_tab_indentation: true
        avoid_superglobals: true
        avoid_space_indentation: true
        avoid_multiple_statements_on_same_line: true
        avoid_fixme_comments: true
        avoid_closing_tag: true
        avoid_aliased_php_functions: true
        align_assignments: true
        argument_type_checks: true
